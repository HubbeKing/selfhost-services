apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: openldap
  namespace: authelia
spec:
  replicas: 3
  selector:
    matchLabels:
      app: openldap
  serviceName: openldap
  template:
    metadata:
      labels:
        app: openldap
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - openldap
      priorityClassName: high-priority
      containers:
        - name: openldap
          image: docker.io/osixia/openldap:1.5.0
          env:
            - name: LDAP_REPLICATION
              value: 'true'
            - name: LDAP_REPLICATION_CONFIG_SYNCPROV
              value: 'binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1'
            - name: LDAP_REPLICATION_DB_SYNCPROV
              value: 'binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1'
            - name: LDAP_REPLICATION_HOSTS
              value: '#PYTHON2BASH:["ldap://openldap-0.openldap.authelia.svc.cluster.local","ldap://openldap-1.openldap.authelia.svc.cluster.local","ldap://openldap-2.openldap.authelia.svc.cluster.local"]'
          envFrom:
            - secretRef:
                name: openldap-envs
          ports:
            - containerPort: 389
              name: ldap
            - containerPort: 636
              name: ldaps
          readinessProbe:
            tcpSocket:
              port: 389
            initialDelaySeconds: 5
            periodSeconds: 15
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /var/lib/ldap
              name: data
              subPath: ldap
            - mountPath: /etc/ldap/slapd.d
              name: data
              subPath: slapd
            - mountPath: /container/service/slapd/assets/certs
              name: data
              subPath: certs
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
        storageClassName: longhorn
