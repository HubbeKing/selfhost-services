apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: immich
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: immich
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: immich
        app.kubernetes.io/component: redis
    spec:
      containers:
        - image: docker.io/library/redis:7.2.3
          name: redis
          command: ["redis-server"]
          args:
            - "--requirepass"
            - "$(REDIS_HOST_PASSWORD)"
          env:
            - name: REDIS_HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-envs
                  key: REDIS_HOST_PASSWORD
            - name: REDISCLI_AUTH
              valueFrom:
                secretKeyRef:
                  name: redis-envs
                  key: REDIS_HOST_PASSWORD
          ports:
            - containerPort: 6379
              name: tcp-redis
          readinessProbe:
            exec:
              command:
                - "redis-cli"
                - "ping"
            initialDelaySeconds: 5
            periodSeconds: 15
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: immich
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: immich
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: immich
        app.kubernetes.io/component: server
    spec:
      containers:
        - image: ghcr.io/immich-app/immich-server:v1.88.1
          name: immich-server
          command: ["/usr/src/app/start.sh", "immich"]
          envFrom:
            - configMapRef:
                name: server-envs
            - secretRef:
                name: server-envs
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-envs
                  key: POSTGRES_PASSWORD
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-envs
                  key: REDIS_HOST_PASSWORD
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 500m
              memory: 512Mi
          ports:
            - containerPort: 3001
              name: http
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /usr/src/app/upload
              name: photos
      volumes:
        - name: photos
          persistentVolumeClaim:
            claimName: nfs-photos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservices
  namespace: immich
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: immich
      app.kubernetes.io/component: microservices
  template:
    metadata:
      labels:
        app.kubernetes.io/name: immich
        app.kubernetes.io/component: microservices
    spec:
      containers:
        - image: ghcr.io/immich-app/immich-server:v1.88.1
          name: immich-microservices
          command: ["/usr/src/app/start.sh", "microservices"]
          envFrom:
            - configMapRef:
                name: server-envs
            - secretRef:
                name: server-envs
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-envs
                  key: POSTGRES_PASSWORD
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-envs
                  key: REDIS_HOST_PASSWORD
          ports:
            - containerPort: 3002
              name: http
          resources:
            limits:
              # VAAPI device for HW acceleration
              gpu.intel.com/i915: 1
            requests:
              cpu: 1000m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /usr/src/app/upload
              name: photos
      volumes:
        - name: photos
          persistentVolumeClaim:
            claimName: nfs-photos
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-learning
  namespace: immich
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: immich
      app.kubernetes.io/component: machine-learning
  template:
    metadata:
      labels:
        app.kubernetes.io/name: immich
        app.kubernetes.io/component: machine-learning
    spec:
      containers:
        - image: ghcr.io/immich-app/immich-machine-learning:v1.88.1
          name: immich-machine-learning
          envFrom:
            - configMapRef:
                name: server-envs
            - secretRef:
                name: server-envs
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-envs
                  key: POSTGRES_PASSWORD
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-envs
                  key: REDIS_HOST_PASSWORD
          resources:
            requests:
              cpu: 1000m
              memory: 1Gi
          ports:
            - containerPort: 3003
              name: http
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /cache
              name: model-cache
      volumes:
        - name: model-cache
          emptyDir: {}
