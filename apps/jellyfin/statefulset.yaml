apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  serviceName: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
      annotations:
        diun.watch_repo: "true"
        diun.exclude_tags: ".*nightly.*;.*unstable.*"
    spec:
      # prefer to be scheduled on galactica, as it has more CPU/iGPU power than valkyrie/pegasus
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - galactica
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - image: jellyfin/jellyfin:10.6.4
          name: jellyfin
          livenessProbe:
            httpGet:
              path: /web/index.html
              port: 8096
            initialDelaySeconds: 10
            periodSeconds: 15
          resources:
            requests:
              # request small amount of CPU to prevent latency when node is under load from other work
              cpu: 100m
            limits:
              # VAAPI device for HW acceleration, requires intel-device-plugins-for-kubernetes
              gpu.intel.com/i915: "1"
          volumeMounts:
            - mountPath: /desertbus
              name: array
              subPath: Videos/DBfH
              readOnly: True
            - mountPath: /movies
              name: array
              subPath: Videos/Movies
              readOnly: True
            - mountPath: /music
              name: array
              subPath: Music
              readOnly: True
            - mountPath: /tv
              name: array
              subPath: Videos/Shows
              readOnly: True
            - mountPath: /transcode
              name: transcode
            - mountPath: /cache
              name: cache
            - mountPath: /config
              name: config
      volumes:
        - name: array
          persistentVolumeClaim:
            claimName: array
        - name: transcode
          emptyDir: {}
        - name: cache
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: longhorn
        resources:
          requests:
            storage: 5Gi
