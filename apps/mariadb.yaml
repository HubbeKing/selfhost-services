apiVersion: v1
kind: Service
metadata:
  name: mariadb
  # this is the service name other pods can use to access this pod
spec:
  # this is the port this service tries to hit on pods/containers
  ports:
    - port: 3306
  selector:
    app: mariadb
    # this means we route to containers whose app label matches mariadb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
spec:
  replicas: 1  
  # only run 1 replica, to prevent mariadb from freaking out, since we have only one volume with all data
  selector:
    matchLabels:
      app: mariadb
      # this deployment should only be concerned about containers labeled "app=mariadb"
  strategy:
    type: Recreate
    # recreate rather than rollingUpdate, so we only have one replica running at once
  template:
    metadata:
      labels:
        app: mariadb
        # label containers so the service knows to route to them
    spec:
      containers:
        - image: mariadb:10
          name: mariadb
          # this needs to match the anonuid of the NFS share on the server
          # otherwise, nodes trying to chown volumes will fail
          securityContext:
            runAsUser: 1000
          # Pull root pw env var from Secret
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-envs
                  key: root-password
          volumeMounts:
            - name: mariadb-storage
              mountPath: /var/lib/mysql
              subPath: mariadb
              # mount a subPath of service-data as a volume for the created container
      volumes:
        - name: mariadb-storage
          persistentVolumeClaim:
            claimName: service-data
