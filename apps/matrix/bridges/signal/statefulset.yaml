apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: matrix-signal
spec:
  selector:
    matchLabels:
      app: matrix-signal
  serviceName: matrix-signal
  template:
    metadata:
      labels:
        app: matrix-signal
    spec:
      containers:
        # this is not really necessary, since mautrix will just retry... but learning is its own reward.
        # signald should start first. kubelet starts containers[] sequentially, in order
        - name: signald
          image: docker.io/finn/signald:latest
          # use a postStart lifecycle hook to consider container started once signald.sock exists
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - "while [ ! -S /signald/signald.sock ]; do sleep 1; done"
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - mountPath: /signald
              name: data-signald
        - name: matrix-signal
          image: dock.mau.dev/tulir/mautrix-signal:latest
          ports:
            - containerPort: 29328
              name: appservice
            - containerPort: 8000
              name: metrics
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 250m
              memory: 128Mi
          volumeMounts:
            - mountPath: /data/config.yaml
              name: matrix-signal-config
              subPath: config.yaml
            - mountPath: /data/registration.yaml
              name: matrix-signal-registration
              subPath: registration.yaml
            - mountPath: /signald
              name: data-signald
      volumes:
        - name: matrix-signal-config
          configMap:
            name: matrix-signal-config
        - name: matrix-signal-registration
          configMap:
            name: matrix-signal-registration
  volumeClaimTemplates:
    - metadata:
        name: data-signald
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
        storageClassName: longhorn
