apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: matrix-signal
spec:
  selector:
    matchLabels:
      app: matrix
      component: matrix-signal
  serviceName: matrix-signal
  template:
    metadata:
      labels:
        app: matrix
        component: matrix-signal
    spec:
      initContainers:
          # mautrix-signal doesn't start if its config is readonly, unfortunately
        - image: docker.io/library/busybox:stable
          name: configmap-copier
          command: ["/bin/sh", "-c", "cp -L /readonly/* /data/"]
          volumeMounts:
            - mountPath: /readonly/config.yaml
              name: matrix-signal-config
              subPath: config.yaml
            - mountPath: /readonly/registration.yaml
              name: matrix-signal-registration
              subPath: registration.yaml
            - mountPath: /data
              name: matrix-signal-data
      containers:
        # this is not really necessary, since mautrix will just retry... but learning is its own reward.
        # signald should start first. kubelet starts containers[] sequentially, in order
        - name: signald
          image: docker.io/signald/signald:0.23.0
          # use a postStart lifecycle hook to consider container started once signald.sock exists
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - "while [ ! -S /signald/signald.sock ]; do sleep 2; done"
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              cpu: 250m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /signald
              name: data-signald
        - name: matrix-signal
          image: dock.mau.dev/mautrix/signal:v0.4.1
          ports:
            - containerPort: 29328
              name: appservice
            - containerPort: 8000
              name: metrics
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 250m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /data
              name: matrix-signal-data
            - mountPath: /signald
              name: data-signald
      volumes:
        - name: matrix-signal-config
          configMap:
            name: matrix-signal-config
        - name: matrix-signal-registration
          configMap:
            name: matrix-signal-registration
        - name: matrix-signal-data
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data-signald
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
        storageClassName: longhorn
