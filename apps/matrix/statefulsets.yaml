apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: matrix-synapse
spec:
  selector:
    matchLabels:
      app: matrix
      component: synapse
  serviceName: matrix-synapse
  template:
    metadata:
      labels:
        app: matrix
        component: synapse
    spec:
      securityContext:
        fsGroup: 991
        runAsGroup: 991
        runAsUser: 991
      containers:
        - image: docker.io/matrixdotorg/synapse:v1.77.0
          name: synapse
          env:
            - name: TZ
              value: Europe/Helsinki
          ports:
            - containerPort: 8008
              name: http
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /data
              name: matrix-synapse-config
            - mountPath: /data/media_store
              name: media-store
            - mountPath: /appservices/mautrix-whatsapp
              name: matrix-whatsapp-registration
            - mountPath: /appservices/mautrix-signal
              name: matrix-signal-registration
      volumes:
        - name: matrix-synapse-config
          configMap:
            name: matrix-synapse-config
        - name: matrix-whatsapp-registration
          configMap:
            name: matrix-whatsapp-registration
        - name: matrix-signal-registration
          configMap:
            name: matrix-signal-registration
  volumeClaimTemplates:
    - metadata:
        name: media-store
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
        storageClassName: longhorn
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: matrix-db
spec:
  selector:
    matchLabels:
      app: matrix
      component: postgres
  serviceName: matrix-db
  template:
    metadata:
      labels:
        app: matrix
        component: postgres
    spec:
      containers:
        - image: docker.io/library/postgres:13.10-alpine
          name: postgres
          envFrom:
            - secretRef:
                name: matrix-db-envs
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - bash
                - "-c"
                - "pg_isready -U synapse -d synapse"
            initialDelaySeconds: 5
            periodSeconds: 15
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
            limits:
              cpu: 250m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: data
              subPath: postgres
            - mountPath: /docker-entrypoint-initdb.d
              name: matrix-db-init
      volumes:
        - name: matrix-db-init
          configMap:
            name: matrix-db-init
            defaultMode: 0755
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi
        storageClassName: longhorn
