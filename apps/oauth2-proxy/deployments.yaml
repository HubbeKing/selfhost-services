apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  selector:
    matchLabels:
      app: oauth2-proxy
      component: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
        component: oauth2-proxy
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - oauth2-proxy
                  - key: component
                    operator: In
                    values:
                      - oauth2-proxy
      priorityClassName: high-priority
      containers:
        - name: oauth2-proxy
          image: quay.io/oauth2-proxy/oauth2-proxy:v7.1.0
          command:
            - "/bin/oauth2-proxy"
            - "--config"
            - "/config/oauth2-proxy.cfg"
            - "--allowed-group"     # keycloak admins groups
            - "/admins"
          ports:
            - containerPort: 4180
              name: http
          readinessProbe:
            httpGet:
              path: /ping
              port: 4180
            initialDelaySeconds: 5
            periodSeconds: 15
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - mountPath: /config
              name: config
      volumes:
        - name: config
          secret:
            secretName: oauth2-proxy-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy-redis-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
      component: redis-primary
  template:
    metadata:
      labels:
        app: oauth2-proxy
        component: redis-primary
    spec:
      priorityClassName: high-priority
      initContainers:
        - image: docker.io/library/busybox:stable
          name: configmap-copier
          command: ["/bin/sh", "-c", "cp -L /readonly/* /configs/"]
          volumeMounts:
            - mountPath: /readonly
              name: redis-configs
            - mountPath: /configs
              name: redis-config-rw
      containers:
        - image: docker.io/library/redis:6.2.1
          name: redis
          command: ["/bin/sh", "/scripts/redis-primary.sh"]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 6379
              name: redis
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 250m
              memory: 250Mi
          volumeMounts:
            - mountPath: /scripts
              name: redis-scripts
            - mountPath: /configs
              name: redis-config-rw
        - image: docker.io/library/redis:6.2.1
          name: sentinel
          command: ["/bin/sh", "/scripts/sentinel-primary.sh"]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 26379
              name: sentinel
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 250m
              memory: 250Mi
          volumeMounts:
            - mountPath: /scripts
              name: redis-scripts
            - mountPath: /configs
              name: redis-config-rw
      volumes:
        - name: redis-scripts
          configMap:
            name: redis-scripts
            defaultMode: 0755
        - name: redis-configs
          configMap:
            name: redis-configs
        - name: redis-config-rw
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy-redis-secondary
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oauth2-proxy
      component: redis-secondary
  template:
    metadata:
      labels:
        app: oauth2-proxy
        component: redis-secondary
    spec:
      # don't co-locate redis-secondary pods with redis-primary pod, or other redis-secondary pods
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - oauth2-proxy
                  - key: component
                    operator: In
                    values:
                      - redis-primary
                      - redis-secondary
      priorityClassName: high-priority
      initContainers:
        - image: docker.io/library/busybox:stable
          name: configmap-copier
          command: ["/bin/sh", "-c", "cp -L /readonly/* /configs/"]
          volumeMounts:
            - mountPath: /readonly
              name: redis-configs
            - mountPath: /configs
              name: redis-config-rw
      containers:
        - image: docker.io/library/redis:6.2.1
          name: redis
          command: ["/bin/sh", "/scripts/redis-secondary.sh"]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 6379
              name: redis
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 250m
              memory: 250Mi
          volumeMounts:
            - mountPath: /scripts
              name: redis-scripts
            - mountPath: /configs
              name: redis-config-rw
        - image: docker.io/library/redis:6.2.1
          name: sentinel
          command: ["/bin/sh", "/scripts/sentinel-secondary.sh"]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 26379
              name: sentinel
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 250m
              memory: 250Mi
          volumeMounts:
            - mountPath: /scripts
              name: redis-scripts
            - mountPath: /configs
              name: redis-config-rw
      volumes:
        - name: redis-scripts
          configMap:
            name: redis-scripts
            defaultMode: 0755
        - name: redis-configs
          configMap:
            name: redis-configs
        - name: redis-config-rw
          emptyDir: {}
