apiVersion: v1
kind: ServiceAccount
metadata:
  name: autoapply
  namespace: default
  labels:
    component: autoapply
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: autoapply
  labels:
    component: autoapply
rules:
  - apiGroups: ["", "apps", "batch", "cert-manager.io", "extensions", "networking.k8s.io", "rbac.authorization.k8s.io"]     # "" is the core API group
    resources: ["ResourceAll"]    # all resources, TODO: limit to needed resources? deployment/service/ingress/secret/configmap/pv/pvc/endpoint/cronjob?
    verbs: ["VerbAll"]            # all verbs, TODO: look into limiting to just what's needed for 'kubectl apply -f' calls
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: autoapply
  labels:
    component: autoapply
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: autoapply
subjects:
  - kind: ServiceAccount
    name: autoapply
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoapply
  namespace: default
  labels:
    component: autoapply
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      component: autoapply
      app: autoapply
  template:
    metadata:
      labels:
        component: autoapply
        app: autoapply
    spec:
      serviceAccountName: autoapply
      containers:
        - name: autoapply
          image: autoapply/autoapply:0.14.1-kubectl
          args:
            - env:AUTOAPPLY_CONFIG
          envFrom:
            - secretRef:
                name: autoapply-secret
          env:
            - name: AUTOAPPLY_CONFIG
              value: |
                init:
                  commands:
                    - mkdir -p -m 700 ~/.ssh
                    - echo "${SSH}" > ~/.ssh/id_ed25519 && chmod 600 ~/.ssh/id_ed25519
                    - echo "${SSH_HOST_KEY}" > ~/.ssh/known_hosts
                    - echo "${GPG}" | gpg --import
                loop:
                  sleep: 60
                  commands:
                    - git clone -b 'master' --depth 1 --single-branch 'git@github.com:HubbeKing/selfhost-services.git' '.'
                    - find '.' -type f -regex '.*.ya*ml' -exec sops --decrypt --in-place '{}' \;
                    - kubectl apply --prune -l 'provider!=kubernetes,component!=autoapply' --prune-whitelist 'core/v1/ConfigMap' --prune-whitelist 'core/v1/Endpoints' --prune-whitelist 'core/v1/PersistentVolumeClaim' --prune-whitelist 'core/v1/Pod' --prune-whitelist 'apps/v1/ReplicationController' --prune-whitelist 'core/v1/Secret' --prune-whitelist 'core/v1/Service' --prune-whitelist 'batch/v1/Job' --prune-whitelist 'batch/v1beta1/CronJob' --prune-whitelist 'apps/v1/DaemonSet' --prune-whitelist 'apps/v1/Deployment' --prune-whitelist 'networking.k8s.io/v1beta1/Ingress' --prune-whitelist 'apps/v1/ReplicaSet' --prune-whitelist 'apps/v1/StatefulSet' -f apps/ -f cert-issuer/ -f nginx/ -f volumes/ -f autoapply/  
      tolerations:
        - effect: NoExecute
          operator: Exists
