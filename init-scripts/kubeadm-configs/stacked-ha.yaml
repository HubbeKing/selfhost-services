apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  anonymous:
    enabled: false
  webhook:
    cacheTTL: 2m
    enabled: true
  x509:
    clientCAFile: /etc/kubernetes/pki/ca.crt
authorization:
  mode: Webhook
  webhook:
    cacheAuthorizedTTL: 5m
    cacheUnauthorizedTTL: 30s
cgroupDriver: systemd
cpuManagerReconcilePeriod: 10s
evictionPressureTransitionPeriod: 5m
fileCheckFrequency: 20s
httpCheckFrequency: 20s
imageMinimumGCAge: 2m
nodeStatusReportFrequency: 10s
nodeStatusUpdateFrequency: 1m
runtimeRequestTimeout: 2m
shutdownGracePeriod: 30s
shutdownGracePeriodCriticalPods: 10s
streamingConnectionIdleTimeout: 4h
syncFrequency: 20s
volumeStatsAggPeriod: 1m
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    token: abcdef.0123456789abcdef
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: /run/containerd/containerd.sock
  taints:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
apiServer:
  extraArgs:
    authorization-mode: Node,RBAC
  timeoutForControlPlane: 4m0s
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controlPlaneEndpoint: ${CONTROL_PLANE_ENDPOINT}
controllerManager:
  extraArgs:
    bind-address: 0.0.0.0
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: k8s.gcr.io
kubernetesVersion: v${KUBE_VERSION}
networking:
  dnsDomain: cluster.local
  podSubnet: ${POD_NETWORK_CIDR}
  serviceSubnet: ${K8S_SERVICE_CIDR}
scheduler:
  extraArgs:
    bind-address: 0.0.0.0
